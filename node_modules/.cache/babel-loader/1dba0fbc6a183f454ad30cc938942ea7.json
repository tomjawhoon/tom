{"ast":null,"code":"import _objectSpread from \"/Users/tomjareiei/Desktop/clinet_lab/book1/react-redux-thunk/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/tomjareiei/Desktop/clinet_lab/book1/react-redux-thunk/src/Input.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport InputAction from './redux/input/actions';\nimport ProductAction from './redux/product/actions';\nconst inputDispatch = InputAction.dispatcher;\nconst productDispatch = ProductAction.dispatcher;\n\nclass Input extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      switch (name) {\n        case 'id':\n          this.props.updateId(value);\n          break;\n\n        case 'name':\n          this.props.updateName(value);\n          break;\n\n        case 'price':\n          this.props.updatePrice(value);\n          break;\n      }\n    };\n\n    this.handleAdd = () => {\n      const _this$props$Input = this.props.Input,\n            id = _this$props$Input.id,\n            name = _this$props$Input.name,\n            price = _this$props$Input.price;\n      this.props.addProduct({\n        id,\n        name,\n        price\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"id\",\n      placeholder: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"name\",\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      name: \"price\",\n      placeholder: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nexport default connect(state => state, _objectSpread({}, inputDispatch, productDispatch))(Input);","map":{"version":3,"sources":["/Users/tomjareiei/Desktop/clinet_lab/book1/react-redux-thunk/src/Input.js"],"names":["React","connect","InputAction","ProductAction","inputDispatch","dispatcher","productDispatch","Input","Component","handleChange","e","target","name","value","props","updateId","updateName","updatePrice","handleAdd","id","price","addProduct","render","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,MAAMC,aAAa,GAAGF,WAAW,CAACG,UAAlC;AACA,MAAMC,eAAe,GAAGH,aAAa,CAACE,UAAtC;;AAEA,MAAME,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAclCC,YAdkC,GAclBC,CAAD,IAAO;AAAA,wBACIA,CAAC,CAACC,MADN;AAAA,YACXC,IADW,aACXA,IADW;AAAA,YACLC,KADK,aACLA,KADK;;AAElB,cAAQD,IAAR;AACI,aAAK,IAAL;AAAW,eAAKE,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AAA4B;;AACvC,aAAK,MAAL;AAAa,eAAKC,KAAL,CAAWE,UAAX,CAAsBH,KAAtB;AAA8B;;AAC3C,aAAK,OAAL;AAAc,eAAKC,KAAL,CAAWG,WAAX,CAAuBJ,KAAvB;AAA+B;AAHjD;AAKH,KArBiC;;AAAA,SAuBlCK,SAvBkC,GAuBtB,MAAM;AAAA,gCAKV,KAAKJ,KAAL,CAAWP,KALD;AAAA,YAEVY,EAFU,qBAEVA,EAFU;AAAA,YAGVP,IAHU,qBAGVA,IAHU;AAAA,YAIVQ,KAJU,qBAIVA,KAJU;AAMd,WAAKN,KAAL,CAAWO,UAAX,CAAsB;AACpBF,QAAAA,EADoB;AAEpBP,QAAAA,IAFoB;AAGpBQ,QAAAA;AAHoB,OAAtB;AAKH,KAlCiC;AAAA;;AAElCE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKb,YAAlC;AAAgD,MAAA,IAAI,EAAC,IAArD;AAA0D,MAAA,WAAW,EAAC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OAC+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/E,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKA,YAAlC;AAAgD,MAAA,IAAI,EAAC,MAArD;AAA4D,MAAA,WAAW,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,OAEmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnF,EAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKA,YAAlC;AAAgD,MAAA,IAAI,EAAC,OAArD;AAA6D,MAAA,WAAW,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,OAGqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHrF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKS,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF;AASD;;AAZiC;;AAsCpC,eAAejB,OAAO,CAACsB,KAAK,IAAIA,KAAV,oBACfnB,aADe,EAEfE,eAFe,EAAP,CAGZC,KAHY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport InputAction from './redux/input/actions';\nimport ProductAction from './redux/product/actions';\n\nconst inputDispatch = InputAction.dispatcher;\nconst productDispatch = ProductAction.dispatcher;\n\nclass Input extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <input type='text' onChange={this.handleChange} name='id' placeholder='id'/> <br/>\n        <input type='text' onChange={this.handleChange} name='name' placeholder='name'/> <br/>\n        <input type='text' onChange={this.handleChange} name='price' placeholder='price'/> <br/>\n        <br/>\n        <button onClick={this.handleAdd}>Add</button>\n      </div>\n    )\n  }\n\n  handleChange = (e) => {\n      const {name, value} = e.target;\n      switch (name) {\n          case 'id': this.props.updateId(value); break;\n          case 'name': this.props.updateName(value); break;\n          case 'price': this.props.updatePrice(value); break;\n      }\n  }\n\n  handleAdd = () => {\n      const {\n          id,\n          name,\n          price\n      } = this.props.Input;\n      this.props.addProduct({\n        id,\n        name,\n        price\n      })\n  }\n\n}\n\nexport default connect(state => state, {\n    ...inputDispatch,\n    ...productDispatch\n})(Input);\n"]},"metadata":{},"sourceType":"module"}